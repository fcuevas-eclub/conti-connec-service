#Server Properties
server:
  port: ${SERVER_PORT}
  address:
    ip: ${SERVER_ADDRES_IP}
  debug: ${SERVER_ADDRES_IP}

#Logging level
logging:
  level:
    root: ${LOGGING_LEVEL_ROOT}
    eclub.com.conticonnec.client: ${LOGGING_LEVEL_ECLUB_COM_CONTICONNEC_CLIENT}

#Configuracion de ambiente de desarrollo
configuracion:
  ambiente: ${CONFIGURACION_AMBIENTE}

#Spring Properties
spring:
  output:
    ansi:
      enabled: ALWAYS
  application:
    name: ${SPRING_APPLICATION_NAME}
    #Datasource Properties
  datasource:
    driver-class-name: ${DATASOURCE_DRIVER_CLASS_NAME}
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}

    #JPA Properties
    jpa:
      hibernate:
        ddl-auto: ${JPA_HIBERNATE_DDL_AUTO}
      properties:
        hibernate:
          dialect: org.hibernate.dialect.PostgreSQLDialect
          format_sql: true
      show-sql: ${JPA_SHOW_SQL}
      database: ${JPA_DATABASE}
      database-platform: ${JPA_DATABASE_PLATFORM}

  #Feing Client Properties
  feing:
    httpclient:
      disableSslValidation: ${FEING_HTTPCLIENT_DISABLESSLVALIDATION}
      enabled: ${FEING_HTTPCLIENT_ENABLED}
    okhttp:
      enabled: ${FEING_OKHTTP_ENABLED}
    client:
      config:
        default:
          connectionTimeout: ${FEING_CLIENT_CONFIG_DEFAULT_CONNECTIONTIMEOUT}
          readTimeout: ${FEING_CLIENT_CONFIG_DEFAULT_READTIMEOUT}
          loggerLevel: ${FEING_CLIENT_CONFIG_DEFAULT_LOGGERLEVEL}

# Directorio para almacenar imagenes o archivos.
resources:
  files:
    pendientes: ${RESOURCES_FILES_PENDIENTES}
    procesados: ${RESOURCES_FILES_PROCESADOS}

# Banco Continental
api:
  conti:
    comm-protocol: ${API_CONTI_COMM_PROTOCOL}
    connTimeout: ${API_CONTI_CONNTIMEOUT}
    readTimeout: ${API_CONTI_READTIMEOUT}
    SSLFilePath: ${API_CONTI_SSLFILEPATH}
    SSLPwd: ${API_CONTI_SSLPWD}
    subscription_key: ${API_CONTI_SUBSCRIPTION_KEY}
    client_id: ${API_CONTI_CLIENT_ID}
    client_secret: ${API_CONTI_CLIENT_SECRET}
    url:
      base: ${API_CONTI_URL_BASE}
      post_token: ${API_CONTI_URL_POST_TOKEN}
      get_by_nro_solicitud: ${API_CONTI_URL_GET_BY_NRO_SOLICITUD}
      post_solicitud: ${API_CONTI_URL_POST_SOLICITUD}
      get_by_state: ${API_CONTI_URL_GET_BY_STATE}
      post_registrar_seguimiento: ${API_CONTI_URL_POST_REGISTRAR_SEGUIMIENTO}

# MicroServicio - User
microservicio:
  user:
    account:
      url:
        base: ${MS_USER_ACCOUNT_URL_BASE}

# Cronometraci√≥n de tareas programadas
scheduled:
  task:
    registrarSeguimientoPorLotes: ${SCHEDULED_TASK_REGISTRARSEGUIMIENTOPORLOTES}
